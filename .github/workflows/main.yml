name: Python Build

on:
  push:
  pull_request:
    branches: [ main ]
  repository_dispatch:
    types: [trigger-forte-wrappers]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7 ]
        torch-version: [ 1.5.0]
        tensorflow-version: [ 1.15.0 ]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip
          pip install --progress-bar off Django django-guardian
          pip install --progress-bar off pylint==2.6.0 flake8==3.8.2 mypy==0.790 pytest==5.1.3
          pip install --progress-bar off coverage codecov ddt
      - name: Install deep learning frameworks
        run: |
          pip install --progress-bar off torch==${{ matrix.torch-version }}
          pip install --progress-bar off tensorflow==${{ matrix.tensorflow-version }}
      - name: Install Texar
        run: |
          git clone https://github.com/asyml/texar-pytorch.git
          cd texar-pytorch
          pip install --progress-bar off .
          cd ..
          # Remove them to avoid confusing pytest.
          rm -rf texar-pytorch

  test_allennlp:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7 ]
        torch-version: [ 1.5.0]
        tensorflow-version: [ 1.15.0 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip
          pip install --progress-bar off pytest==5.1.3
          pip install --progress-bar off coverage ddt
          pip install .[allennlp]
      - name: Test with pytest and run coverage
        run: |
          coverage run -m pytest tests/allennlp_processors_test.py

  test_nltk:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7 ]
        torch-version: [ 1.5.0]
        tensorflow-version: [ 1.15.0 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip
          pip install --progress-bar off pytest==5.1.3
          pip install --progress-bar off coverage ddt
          pip install .[nltk]
      - name: Test with pytest and run coverage
        run: |
          coverage run -m pytest tests/nltk_processors_test.py

  test_varder:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7 ]
        torch-version: [ 1.5.0]
        tensorflow-version: [ 1.15.0 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip
          pip install --progress-bar off pytest==5.1.3
          pip install --progress-bar off coverage ddt
          pip install .[varder]
      - name: Test with pytest and run coverage
        run: |
          coverage run -m pytest tests/sentiment_processor_test.py

  test_spacy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7 ]
        torch-version: [ 1.5.0]
        tensorflow-version: [ 1.15.0 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip
          pip install --progress-bar off pytest==5.1.3
          pip install --progress-bar off coverage ddt
          pip install .[spacy]
      - name: Test with pytest and run coverage
        run: |
          coverage run -m pytest tests/spacy_processors_test.py

  test_stanza:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.6, 3.7 ]
        torch-version: [ 1.5.0]
        tensorflow-version: [ 1.15.0 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('setup.py') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name: Install dependencies
        run: |
          python -m pip install --progress-bar off --upgrade pip
          pip install --progress-bar off pytest==5.1.3
          pip install --progress-bar off coverage ddt
          pip install .[stanza]
      - name: Test with pytest and run coverage
        run: |
          coverage run -m pytest tests/stanfordnlp_processor_test.py

  dispatch:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.REPO_DISPATCH_PAT_HECTOR }}
          repository: petuum/composing_information_system
          event-type: trigger-composable-workflow
